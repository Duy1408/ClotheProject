// <auto-generated />
using System;
using ClotheBusinessObject.BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClotheBusinessObject.Migrations
{
    [DbContext(typeof(ClotheShopSystemDBContext))]
    [Migration("20240828032651_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Account", b =>
                {
                    b.Property<Guid>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShopID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AccountID");

                    b.HasIndex("RoleID");

                    b.HasIndex("ShopID");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Clothe", b =>
                {
                    b.Property<Guid>("ClotheID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClotheName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Rent")
                        .HasColumnType("float");

                    b.Property<Guid>("ShopID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClotheID");

                    b.HasIndex("ShopID");

                    b.ToTable("Clothe", (string)null);
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Role", b =>
                {
                    b.Property<Guid>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Shop", b =>
                {
                    b.Property<Guid>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CloseTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopID");

                    b.ToTable("Shop", (string)null);
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Account", b =>
                {
                    b.HasOne("ClotheBusinessObject.BusinessObject.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClotheBusinessObject.BusinessObject.Shop", "Shop")
                        .WithMany("Accounts")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Clothe", b =>
                {
                    b.HasOne("ClotheBusinessObject.BusinessObject.Shop", "Shop")
                        .WithMany("Clothes")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ClotheBusinessObject.BusinessObject.Shop", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Clothes");
                });
#pragma warning restore 612, 618
        }
    }
}
